// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load ,sel=address ,a=out1 ,b=out2 ,c=out3 ,d=out4 ,e=out5 ,f=out6 ,g=out7 ,h=out8 );
    Register(in=in ,load=out1 ,out=r1 );
    Register(in=in ,load=out2 ,out=r2 );
    Register(in=in ,load=out3 ,out=r3 );
    Register(in=in ,load=out4 ,out=r4 );
    Register(in=in ,load=out5 ,out=r5 );
    Register(in=in ,load=out6 ,out=r6 );
    Register(in=in ,load=out7 ,out=r7 );
    Register(in=in ,load=out8 ,out=r8 );

    Mux8Way16(a=r1 ,b=r2 ,c=r3 ,d=r4 ,e=r5 ,f=r6 ,g=r7 ,h=r8 ,sel=address ,out=out );
}