class Cat {

   field int x, y, location;
   field int memAddress;
   

   /** Constructs a new Cat. */
   constructor Cat new(int Ax, int Ay) {
    let x = Ax;
    let y = Ay;
    do location_calc();
    do draw();
    return this;
   }

    method void location_calc(){
    let location = x+(16*32*y);
    return;
    }

   /** Disposes this Cat. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the Cat on the screen. */
   method void draw() {
   let memAddress = 16384+location;
	do Memory.poke(memAddress+0, 2080);
	do Memory.poke(memAddress+32, 5200);
	do Memory.poke(memAddress+64, 5064);
	do Memory.poke(memAddress+96, 5160);
	do Memory.poke(memAddress+128, 6168);
	do Memory.poke(memAddress+160, 4680);
	do Memory.poke(memAddress+192, 4104);
	do Memory.poke(memAddress+224, -1889);
	do Memory.poke(memAddress+256, 8580);
	do Memory.poke(memAddress+288, -2017);
	do Memory.poke(memAddress+320, 5064);
	do Memory.poke(memAddress+352, 2064);
	do Memory.poke(memAddress+384, 2016);
	do Memory.poke(memAddress+416, 0);
	do Memory.poke(memAddress+448, 0);
	do Memory.poke(memAddress+480, 0);
	return;
   }

   /** Erases the Cat from the screen. */
   method void erase() {
        let memAddress = 16384+location;
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 0);
        do Memory.poke(memAddress+64, 0);
        do Memory.poke(memAddress+96, 0);
        do Memory.poke(memAddress+128, 0);
        do Memory.poke(memAddress+160, 0);
        do Memory.poke(memAddress+192, 0);
        do Memory.poke(memAddress+224, 0);
        do Memory.poke(memAddress+256, 0);
        do Memory.poke(memAddress+288, 0);
        do Memory.poke(memAddress+320, 0);
        do Memory.poke(memAddress+352, 0);
        do Memory.poke(memAddress+384, 0);
        do Memory.poke(memAddress+416, 0);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);
        return;
   }



   method void moveUp() {
      return;
   }

   /** Moves the Cat down by 16 pixels. */
   method void moveDown() {
      if (y < 14) {
      
        do erase();
        let y = y+1;
        do location_calc();
        do draw();
      }
      return;
   }

   /** Moves the Cat left by 16 pixels. */
   method void moveLeft() {
      if (x > 0) {
        do erase();
        let x = x-1;
        do location_calc();
        do draw();
      }
      return;
   }

   /** Moves the Cat right by 16 pixels. */
   method void moveRight() {
      if (x < 31) {
        do erase();
        let x = x+1;
        do location_calc();
        do draw();
      }
      return;
   }

   method int getx(){
   return x;
   }

   method int gety(){
   return y;
   }

   method int getlocation(){
   return location;
   }
}